

import com.mysql.jdbc.Connection;
import java.applet.AudioClip;
import java.awt.Cursor;
import java.awt.Image;
import java.awt.Toolkit;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.net.URL;
import java.net.URLConnection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingWorker;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Jona
 */
public class EnviarCorreo extends javax.swing.JFrame {

      UsuarioYClaveBD usuarioyclavebd = new UsuarioYClaveBD();
     
                                          //si no fuera static se pondria la palabra verde usuarioyclavebd
     public static final  String URL = UsuarioYClaveBD.getURL();
      public static final  String USERNAME = UsuarioYClaveBD.getUSERNAME();//usuario de la abse de datos
       public static final  String PASSWORD = UsuarioYClaveBD.getPASSWORD(); //clave de la abse de datos
       

    
     
       PreparedStatement ps;
       ResultSet rs; //variables para poder conectar a la BD
       
        JFileChooser seleccionado = new JFileChooser(); //esto es para buscar un archivo       
    File archivo;
   String ubicacionArchivo ="";
     String NombreArchivo="";
   
    public EnviarCorreo() {
          initComponents();

        
        
      //  Password.requestFocus();//esto es para que se puede volver a escribir en el Jtext si tener que clickearlo
        try {//ESTO TIENE QUE VER CON LA CLASE FONDOSQING PARA COLOCAR IMAGEN DE FONDO
            FondoSwing fondo = new FondoSwing(ImageIO.read(new File("BD/EnviarCorreo.jpg")));

            JPanel panel = (JPanel) this.getContentPane();
            panel.setBorder(fondo);
        } catch (IOException ex) {
           
        }

        diseño_Botones();
 int ancho = java.awt.Toolkit.getDefaultToolkit().getScreenSize().width;
       int alto = java.awt.Toolkit.getDefaultToolkit().getScreenSize().height;
    
      this.setBounds((ancho / 2) - (this.getWidth() / 2), (alto / 2) - (this.getHeight() / 2), 650, 850); //Al dividir el «ancho» entre 2 estoy ubicándome en el centro de la pantalla (horizontalmente). Pero, esto haría que el lado izquierdo de nuestra ventana colinde con el centro, así que le restamos la mitad del tamaño que tenga nuestra ventana. Esto hará que horizontalmente se coloque la ventana en el centro. Lo mismo se aplica para las coordenadas verticales.
 //modifico el ancho y alto por defecto

         this.setResizable(false); //para que no modifiquen el ancho y no se agrande
        this.setLocationRelativeTo(this); // para que este en el centro de la pantalla
        //this.setTitle("xd");
       
        
       
        
    Image icono = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenes/Lain.png"));//le coloco el icono a la aplicacion

        this.setIconImage(icono);
TextoCorreo.requestFocus();
      //  this.setExtendedState(this.MAXIMIZED_BOTH); // para que inicie ocupando toda la pantalla
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        TextoCorreo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        TextoClave = new javax.swing.JPasswordField();
        Boton_Mostrarclave = new javax.swing.JButton();
        TextoDocumento = new javax.swing.JTextField();
        ComboBoxTipoCorreo = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextoDescripcion = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        BotonOK = new javax.swing.JButton();
        BarraProgreso = new javax.swing.JProgressBar();
        BotonCargarArchivo = new javax.swing.JButton();
        BotonAtras = new javax.swing.JButton();
        BotonInicio = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(650, 850));

        jLabel3.setFont(new java.awt.Font("MV Boli", 1, 28)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Clave:");

        TextoCorreo.setFont(new java.awt.Font("Tempus Sans ITC", 3, 30)); // NOI18N
        TextoCorreo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextoCorreo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        TextoCorreo.setSelectionColor(new java.awt.Color(0, 0, 0));
        TextoCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextoCorreoActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("MV Boli", 1, 28)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Correo:");

        TextoClave.setFont(new java.awt.Font("Tempus Sans ITC", 1, 40)); // NOI18N
        TextoClave.setSelectionColor(new java.awt.Color(0, 0, 0));
        TextoClave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextoClaveActionPerformed(evt);
            }
        });

        Boton_Mostrarclave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Mostrar.png"))); // NOI18N
        Boton_Mostrarclave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Boton_Mostrarclave.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Mostrar2.png"))); // NOI18N
        Boton_Mostrarclave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_MostrarclaveActionPerformed(evt);
            }
        });

        TextoDocumento.setFont(new java.awt.Font("Tempus Sans ITC", 3, 30)); // NOI18N
        TextoDocumento.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextoDocumento.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        TextoDocumento.setSelectionColor(new java.awt.Color(0, 0, 0));
        TextoDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextoDocumentoActionPerformed(evt);
            }
        });
        TextoDocumento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TextoDocumentoKeyTyped(evt);
            }
        });

        ComboBoxTipoCorreo.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        ComboBoxTipoCorreo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Outlook", "Yahoo ", "Gmail" }));

        jLabel6.setFont(new java.awt.Font("MV Boli", 1, 28)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ID paciente:");

        TextoDescripcion.setColumns(20);
        TextoDescripcion.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        TextoDescripcion.setRows(5);
        jScrollPane1.setViewportView(TextoDescripcion);

        jLabel7.setFont(new java.awt.Font("MV Boli", 1, 28)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Descripcion:");

        BotonOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ok.png"))); // NOI18N
        BotonOK.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonOK.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ok2.png"))); // NOI18N
        BotonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonOKActionPerformed(evt);
            }
        });

        BarraProgreso.setForeground(new java.awt.Color(0, 0, 0));

        BotonCargarArchivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CargarArchivo.png"))); // NOI18N
        BotonCargarArchivo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonCargarArchivo.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CargarArchivo2.png"))); // NOI18N
        BotonCargarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCargarArchivoActionPerformed(evt);
            }
        });

        BotonAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Atras.png"))); // NOI18N
        BotonAtras.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonAtras.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Atras2.png"))); // NOI18N
        BotonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAtrasActionPerformed(evt);
            }
        });

        BotonInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/inicio.png"))); // NOI18N
        BotonInicio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonInicio.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/inicio2.png"))); // NOI18N
        BotonInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonInicioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TextoDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonCargarArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
            .addGroup(layout.createSequentialGroup()
                .addComponent(BarraProgreso, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotonInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(BotonAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotonOK, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(267, 267, 267))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(TextoCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(TextoClave, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Boton_Mostrarclave, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxTipoCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BarraProgreso, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(BotonInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 248, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextoCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ComboBoxTipoCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextoClave, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Boton_Mostrarclave, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextoDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(BotonCargarArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BotonOK, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                        .addComponent(BotonAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextoCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextoCorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextoCorreoActionPerformed

    private void TextoClaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextoClaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextoClaveActionPerformed

    private void Boton_MostrarclaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_MostrarclaveActionPerformed
        char mostrarClave = 0;

        TextoClave.setEchoChar(mostrarClave);
    }//GEN-LAST:event_Boton_MostrarclaveActionPerformed

    private void TextoDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextoDocumentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextoDocumentoActionPerformed

    private void TextoDocumentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextoDocumentoKeyTyped
        //esto para valdiar solo numeros
        char C= evt.getKeyChar();

        if(Character.isLetter(C))
        {
            // getToolkit().beep();  //esto lo que ahce es hacer un sonido de beep
            evt.consume();
            AudioClip  sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Advertencia.wav"));
            sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/123.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b><span style=\"font-size:1.3em\">Solo caracteres numericos</b>", "Error✘", JOptionPane.INFORMATION_MESSAGE, icon);
            TextoDocumento.setCursor(null);
        }
        else if((int)evt.getKeyChar()>32 && (int)evt.getKeyChar()<=47
            ||(int)evt.getKeyChar()>=58 && (int)evt.getKeyChar()<=64
            || (int)evt.getKeyChar()>=91 && (int)evt.getKeyChar()<=96
            || (int)evt.getKeyChar()>=123 && (int)evt.getKeyChar()<=255)
        {
            //  getToolkit().beep();// //esto lo que ahce es hacer un sonido de beep
            evt.consume();
            AudioClip  sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Advertencia.wav"));
            sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/123.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b><span style=\"font-size:1.3em\">Solo caracteres numericos</b>", "Error✘", JOptionPane.INFORMATION_MESSAGE, icon);
            TextoDocumento.setCursor(null);
        }
    }//GEN-LAST:event_TextoDocumentoKeyTyped

    private void BotonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonOKActionPerformed
boolean validacion_Correo=false; //valido si el correo tiene @ o termina en com oco o sus derivados
  boolean Hay_internet = true;//es para saber si hay internet
        try {

            URL ruta = new URL("http://www.google.es"); //si logra conectarse a google hay internet
            URLConnection rutaC = ruta.openConnection();
            rutaC.connect();

        } catch (Exception e) {

            Hay_internet = false;
        }

        if (TextoCorreo.getText().contains("@")&& TextoCorreo.getText().endsWith(".com") ||TextoCorreo.getText().endsWith(".co")||TextoCorreo.getText().endsWith(".org")  ||TextoCorreo.getText().endsWith(".es") ||TextoCorreo.getText().endsWith(".it") ||TextoCorreo.getText().endsWith(".fr") ||TextoCorreo.getText().endsWith(".cat") ||TextoCorreo.getText().endsWith(".net"))  {
            validacion_Correo=true;//si el correo cumple es true

        }
        //si tiene un campo vacio entra el if
        if("".equals(TextoCorreo.getText()) || "".equals(TextoClave.getText()) || "".equals(TextoDocumento.getText()) || "".equals(TextoDescripcion.getText())){

            AudioClip  sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Advertencia.wav"));
            sonido.play();
            JOptionPane.showMessageDialog(null, "<html><b><span style=\"font-size:1.3em\">Uno de los campos esta vacio</b>", "Error✘", JOptionPane.INFORMATION_MESSAGE);
        }
        //si el correo es invalido o empieza con @ entra el if
        else if(validacion_Correo==false || TextoCorreo.getText().startsWith("@") ){
            AudioClip  sonido;
            sonido= java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
            sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/Correo invalido.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b><span style=\"font-size:1.3em\">Correo invalido</b>", " Error✘", JOptionPane.INFORMATION_MESSAGE, icon);
            TextoCorreo.requestFocus();//esto es para que se puede volver a escribir en el Jtext si tener que clickearlo
        }
        
        else if (Hay_internet == false){
          AudioClip  sonido;
            sonido= java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
            sonido.play();
            Icon icon = new ImageIcon(getClass().getResource("/Imagenes/Correo invalido.png")); //para poner icono al aviso
            JOptionPane.showMessageDialog(null, "<html><b><span style=\"font-size:1.3em\">No hay conexion a internet</b>", " Error✘", JOptionPane.INFORMATION_MESSAGE, icon);
        }
        //como paso los if, buscara el ID del paciente
        else{

            try {
                String pacienteID ="";
                String Correopaciente ="";
                String NombrePaciente="";
String   TipoCorreo = (String) ComboBoxTipoCorreo.getSelectedItem();
                Connection con=null;
                con= getConection();
                com.mysql.jdbc.PreparedStatement ps;
                ResultSet res;
                ps= (com.mysql.jdbc.PreparedStatement) con.prepareStatement("SELECT * FROM paciente");
                res= ps.executeQuery();

                while(res.next()){//recorrera cada columna de la tabla
                    pacienteID =res.getString(1);//el usuario esta en la posicion 2 , (se cuenta desde el 1 no desde el 0 )
                    NombrePaciente = res.getString(2);
                    Correopaciente = res.getString(7);//el correo esta en la posicion 7

                    if(TextoDocumento.getText().equals(pacienteID)){//si el ID de la tabla es igual al de la caja de texto lo encontro
                        //ahora verificare si tiene correo registrado
                        if("".equals(Correopaciente)){
                            AudioClip  sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Advertencia.wav"));
                            sonido.play();
                            JOptionPane.showMessageDialog(null, "<html><b><span style=\"font-size:1.3em\">El paciente no tiene correo registrado</b>", "Error✘", JOptionPane.INFORMATION_MESSAGE);
                            return;//salgo del metodo

                        }
                        //si pasa al else es que si tiene correo
                        else{
  BarraProgreso.setVisible(true);
  
                Progreso_EnviarCorreo p = new Progreso_EnviarCorreo(BarraProgreso, TextoCorreo.getText(), TextoClave.getText(), Correopaciente, NombrePaciente, TextoDescripcion.getText(), ubicacionArchivo, NombreArchivo, TipoCorreo); //lo dirijo a la clase Progreso_EnviarExcel que hara las operaciones y mostrata una barra de carga, tambn le mando el correo y la clave

                p.addPropertyChangeListener(new PropertyChangeListener() {// todo esto es para cambiar el cursor a cursor de carga
                    @Override
                    public void propertyChange(PropertyChangeEvent evt) {
                        if (evt.getPropertyName().equalsIgnoreCase("progreso_enviarcorreo")) {
                            setCursor(new Cursor(Cursor.WAIT_CURSOR));
                        } else {
                            if (evt.getPropertyName().equalsIgnoreCase("state")) {
                                switch ((SwingWorker.StateValue) evt.getNewValue()) {
                                    case DONE://si ya esta entonces quite la barra y deje cursor por defecto
                                        BarraProgreso.setVisible(false);
                                        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
 
                                        break;
                                    case STARTED://si empezo ponga cursor de carga
                                        setCursor(new Cursor(Cursor.WAIT_CURSOR));
                                        break;
                                    case PENDING://si sigue pendiente no haga nada

                                        break;
                                }
                            }
                        }
                    }
                });
                p.execute();
                        }

                        return;//para salir del metodo
                    }

                }

                AudioClip sonido;
                sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Advertencia.wav"));
                sonido.play();
                Icon icon = new ImageIcon(getClass().getResource("/Imagenes/Usuario_erroneo.png")); //para poner icono al aviso
                JOptionPane.showMessageDialog(null, "<html><b><span style=\"font-size:1.3em\">Paciente no encontrado</b>", "Error✘", JOptionPane.WARNING_MESSAGE, null);
                //   Texto_alarma.requestFocus();//esto es para que se puede volver a escribir en el Jtext si tener que clickearlo
TextoDocumento.requestFocus();
            } catch (Exception e) {

                AudioClip    sonido = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Error.wav"));
                sonido.play();
                Icon icon = new ImageIcon(getClass().getResource("/Imagenes/X.png")); //para poner icono al aviso
                JOptionPane.showMessageDialog(null, "<html><b><span style=\"font-size:1.3em\">Error desconocido</b>", "Error✘", JOptionPane.INFORMATION_MESSAGE, icon);
            }
        }      
    }//GEN-LAST:event_BotonOKActionPerformed

    private void BotonCargarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCargarArchivoActionPerformed
          if(seleccionado.showDialog(null, "ABRIR ARCHIVO") == JFileChooser.APPROVE_OPTION){
            archivo = seleccionado.getSelectedFile();
            if(archivo.canRead()){//si el archivo se puede leer
              
                  ubicacionArchivo = archivo.getAbsolutePath(); //me dara la direccion del archivo
     NombreArchivo=archivo.getName();
                 
                
            }
              
        }
    }//GEN-LAST:event_BotonCargarArchivoActionPerformed

    private void BotonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAtrasActionPerformed

        if("LAIN☢".equals(this.getTitle())){
            Menu menu = new Menu();//lo dirijo al loginadmin
            menu.setTitle("LAIN☢");//para que muestre en el la pantalla esquina superior izquierda un titutlo
            menu.setVisible(true);
            AudioClip sonido2 = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Boton.wav"));
            sonido2.play();
            Menu.BotonAdmin.setVisible(false);//en el menu puse esta variable publica la llamo y la modifico
            dispose();//para cerrar la ventana actual
        }
        else {
            Menu menu = new Menu();//lo dirijo al loginadmin
            menu.setTitle("LAIN☢-Admin");//para que muestre en el la pantalla esquina superior izquierda un titutlo
            menu.setVisible(true);
            AudioClip sonido2 = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Boton.wav"));
            sonido2.play();
            Menu.BotonAdmin.setVisible(true);//en el menu puse esta variable publica la llamo y la modifico
            dispose();//para cerrar la ventana actual

        }

    }//GEN-LAST:event_BotonAtrasActionPerformed

    private void BotonInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonInicioActionPerformed
        Login login = new Login();//lo dirijo al loginadmin
        login.setTitle("LAIN☢");//para que muestre en el la pantalla esquina superior izquierda un titutlo
        login.setVisible(true);
        AudioClip sonido2 = java.applet.Applet.newAudioClip(getClass().getResource("/Sonidos/Boton.wav"));
        sonido2.play();
        dispose();//para cerrar la ventana actual
    }//GEN-LAST:event_BotonInicioActionPerformed

    public void diseño_Botones(){
    
    BotonInicio.setOpaque(false);
        BotonInicio.setContentAreaFilled(false); 
        BotonInicio.setBorderPainted(false);
        
         
    Boton_Mostrarclave.setOpaque(false);
        Boton_Mostrarclave.setContentAreaFilled(false); 
        Boton_Mostrarclave.setBorderPainted(false);
        
        
             
    BotonCargarArchivo.setOpaque(false);
        BotonCargarArchivo.setContentAreaFilled(false); 
        BotonCargarArchivo.setBorderPainted(false);
        
        BarraProgreso.setVisible(false);
        
               
    BotonAtras.setOpaque(false);
        BotonAtras.setContentAreaFilled(false); 
        BotonAtras.setBorderPainted(false);
                    
    BotonOK.setOpaque(false);
        BotonOK.setContentAreaFilled(false); 
        BotonOK.setBorderPainted(false);
    }
    
     public static  Connection getConection(){
   
       Connection con = null;
       
       try {
           Class.forName("com.mysql.jdbc.Driver");
         con=  (Connection) DriverManager.getConnection(URL,USERNAME, PASSWORD);
          
       } catch (Exception e) {
           System.out.println(e);
       }
       return con;
   }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EnviarCorreo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EnviarCorreo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EnviarCorreo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EnviarCorreo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EnviarCorreo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JProgressBar BarraProgreso;
    private javax.swing.JButton BotonAtras;
    private javax.swing.JButton BotonCargarArchivo;
    private javax.swing.JButton BotonInicio;
    private javax.swing.JButton BotonOK;
    private javax.swing.JButton Boton_Mostrarclave;
    private javax.swing.JComboBox<String> ComboBoxTipoCorreo;
    private javax.swing.JPasswordField TextoClave;
    private javax.swing.JTextField TextoCorreo;
    private javax.swing.JTextArea TextoDescripcion;
    private javax.swing.JTextField TextoDocumento;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
